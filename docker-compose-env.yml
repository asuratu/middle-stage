version: '3.7'

######## 项目依赖的环境，启动项目之前要先启动此环境 #######
######## The environment that the project depends on, starting this environment before starting the project #######

services:
  # elasticsearch
  # 将容器内的文件复制到挂载目录: docker cp ccdc1113c376:/usr/share/elasticsearch/ ./data/elasticsearch/
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.13.4
    container_name: es_stage
    user: root
    environment:
      - "discovery.type=single-node"
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "TZ=Asia/Shanghai"
    volumes:
      - ./data/elasticsearch/config:/usr/share/elasticsearch/config
      - ./data/elasticsearch/data:/usr/share/elasticsearch/data
      - ./data/elasticsearch/plugins:/usr/share/elasticsearch/plugins
    restart: always
    ports:
    - "9200:9200"
    - "9300:9300"
    networks:
      - middle_net

  # 查看elasticsearch数据 - Kibana to view Elasticsearch data
  kibana:
    image: docker.elastic.co/kibana/kibana:7.13.4
    container_name: kibana_stage
    environment:
      - elasticsearch.hosts=http://elasticsearch:9200
      - TZ=Asia/Shanghai
    volumes:
      - ./data/kibana/config:/usr/share/kibana/config
    restart: always
    networks:
      - middle_net
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch

  # asynqmon asynq延迟队列、定时队列的webui - Asynqmon asynq delay queue, timing queue's webUI
  asynqmon:
#    image: hibiken/asynqmon:latest
    image: tantobocah/asynqmon:latest # for mac m1
    container_name: asynqmon_stage
    ports:
      - "8980:8180"
    command:
      - '--port=8180'
      - '--redis-addr=redis:6379'
      - '--redis-password=G62m50oigInC30sf'
    restart: always
    networks:
      - middle_net
    depends_on:
      - redis

  # mysql
  mysql:
    image: mysql:latest
    container_name: mysql_stage
    environment:
      # 时区上海 - Time zone Shanghai (Change if needed)
      TZ: Asia/Shanghai
      # root 密码 - root password
      MYSQL_ROOT_PASSWORD: PXDN93VRKUm8TeE7
    ports:
      - "3310:3306"
    volumes:
      # 数据挂载 - Data mounting
      - ./data/mysql/data:/var/lib/mysql
      # 日志
    command:
      # 将mysql8.0默认密码策略 修改为 原先 策略 (mysql8.0对其默认策略做了更改 会导致密码无法匹配)
      # Modify the Mysql 8.0 default password strategy to the original strategy (MySQL8.0 to change its default strategy will cause the password to be unable to match)
      --default-authentication-plugin=mysql_native_password
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_general_ci
      --explicit_defaults_for_timestamp=true
      --lower_case_table_names=1
    privileged: true
    restart: always
    networks:
      - middle_net

  #redis容器 - Redis container
  redis:
    image: redis:6.2.5
    container_name: redis_stage
    ports:
      - "36379:6379"
    environment:
      # 时区上海 - Time zone Shanghai (Change if needed)
      TZ: Asia/Shanghai
    volumes:
      # 数据文件 - data files
      - ./data/redis/data:/data:rw
    command: "redis-server --requirepass G62m50oigInC30sf  --appendonly yes"
    privileged: true
    restart: always
    networks:
      - middle_net

  etcd:
#    image: bitnami/etcd
    image: pachyderm/etcd:v3.5.2-arm64 # for mac m1
    container_name: etcd_stage
    environment:
      TZ: Asia/Shanghai
      ALLOW_NONE_AUTHENTICATION: yes
      ETCD_ADVERTISE_CLIENT_URLS: http://0.0.0.0:2379
      ETCD_LISTEN_CLIENT_URLS: http://0.0.0.0:2379
    ports: # 设置端口映射
      - "2379:2379"
      - "2380:2380"
    restart: always
    networks:
      - middle_net

  # 启动之后修改地址为 etcd:2379
  etcd-manage:
#    image: evildecay/etcdkeeper
    image: lykart/etcdkeeper:latest    # for mac m1
    container_name: etcd_manage_stage
    environment:
      TZ: Asia/Shanghai
    ports:
      - "8280:8080"
    depends_on: # 依赖容器
      - etcd                                          # 在 etcd 服务容器启动后启动
    restart: always
    networks:
      - middle_net

networks:
  middle_net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

