// Code generated by goctl. DO NOT EDIT!
// Source: user.proto

package userclient

import (
	"context"

	"middle/app/user/rpc/types/user"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddUsersReq          = user.AddUsersReq
	AddUsersResp         = user.AddUsersResp
	DelUsersReq          = user.DelUsersReq
	DelUsersResp         = user.DelUsersResp
	GetUserResp          = user.GetUserResp
	GetUsersByAccountReq = user.GetUsersByAccountReq
	GetUsersByIdReq      = user.GetUsersByIdReq
	SearchUsersReq       = user.SearchUsersReq
	SearchUsersResp      = user.SearchUsersResp
	UpdateUsersReq       = user.UpdateUsersReq
	UpdateUsersResp      = user.UpdateUsersResp
	Users                = user.Users

	User interface {
		// -----------------------users-----------------------
		AddUsers(ctx context.Context, in *AddUsersReq, opts ...grpc.CallOption) (*AddUsersResp, error)
		UpdateUsers(ctx context.Context, in *UpdateUsersReq, opts ...grpc.CallOption) (*UpdateUsersResp, error)
		DelUsers(ctx context.Context, in *DelUsersReq, opts ...grpc.CallOption) (*DelUsersResp, error)
		GetUsersById(ctx context.Context, in *GetUsersByIdReq, opts ...grpc.CallOption) (*GetUserResp, error)
		GetUsersByAccount(ctx context.Context, in *GetUsersByAccountReq, opts ...grpc.CallOption) (*GetUserResp, error)
		SearchUsers(ctx context.Context, in *SearchUsersReq, opts ...grpc.CallOption) (*SearchUsersResp, error)
	}

	defaultUser struct {
		cli zrpc.Client
	}
)

func NewUser(cli zrpc.Client) User {
	return &defaultUser{
		cli: cli,
	}
}

// -----------------------users-----------------------
func (m *defaultUser) AddUsers(ctx context.Context, in *AddUsersReq, opts ...grpc.CallOption) (*AddUsersResp, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.AddUsers(ctx, in, opts...)
}

func (m *defaultUser) UpdateUsers(ctx context.Context, in *UpdateUsersReq, opts ...grpc.CallOption) (*UpdateUsersResp, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.UpdateUsers(ctx, in, opts...)
}

func (m *defaultUser) DelUsers(ctx context.Context, in *DelUsersReq, opts ...grpc.CallOption) (*DelUsersResp, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.DelUsers(ctx, in, opts...)
}

func (m *defaultUser) GetUsersById(ctx context.Context, in *GetUsersByIdReq, opts ...grpc.CallOption) (*GetUserResp, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.GetUsersById(ctx, in, opts...)
}

func (m *defaultUser) GetUsersByAccount(ctx context.Context, in *GetUsersByAccountReq, opts ...grpc.CallOption) (*GetUserResp, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.GetUsersByAccount(ctx, in, opts...)
}

func (m *defaultUser) SearchUsers(ctx context.Context, in *SearchUsersReq, opts ...grpc.CallOption) (*SearchUsersResp, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.SearchUsers(ctx, in, opts...)
}
