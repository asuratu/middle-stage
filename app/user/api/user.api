info (
	title: "user api"
	desc: "用户系统"
	author: "AsuraTu"
	email: "455224159@qq.com"
)

// ============================> user v1 <============================

//手机号是否存在
type PhoneExistReq {
	Phone string `json:"phone,omitempty" v:"phone @required|size:11#请输入手机号|手机号称长度非法"`
}
type PhoneExistReply {
	Exist bool `json:"exist"`
}

//使用手机号注册
type SignupByPhoneReq {
	Name         string `json:"name"`
	Phone        string `json:"phone,omitempty" v:"phone @required|size:11#请输入手机号|手机号称长度非法"`
	Password     string `json:"password"`
	City         string `json:"city"`
	Introduction string `json:"introduction"`
	Avatar       string `json:"avatar"`
	SmsCode      string `json:"sms_code"`
}
type TokenReply {
	AccessToken  string `json:"access_token"`
	AccessExpire int64  `json:"access_expire"`
	RefreshAfter int64  `json:"refresh_after"`
}

// 使用手机号密码登录
type LoginByPhoneReq {
	Phone         string `json:"phone,omitempty" v:"phone @required|size:11#请输入手机号|手机号称长度非法"`
	Password      string `json:"password"`
	CaptchaId     string `json:"captcha_id,omitempty"`
	CaptchaAnswer string `json:"captcha_answer,omitempty"`
}

//生成图形验证码
type CaptchaReply {
	CaptchaId    string `json:"captchaId"`
	CaptchaImage string `json:"captchaImage"`
}

//发送短信验证码
type SendSmsCodeReq {
	Phone         string `json:"phone,omitempty" v:"phone @required|size:11#请输入手机号|手机号称长度非法"`
	CaptchaId     string `json:"captcha_id,omitempty"`
	CaptchaAnswer string `json:"captcha_answer,omitempty"`
}
type SendSmsCodeReply {
	Success bool `json:"success"`
}

type UserInfoReply {
	Id           int64  `json:"id"`
	Name         string `json:"name"`
	Phone        string `json:"phone"`
	City         string `json:"city"`
	Introduction string `json:"introduction"`
	Avatar       string `json:"avatar"`
}
type SimpleUserInfoReply {
	Id     int64  `json:"id"`
	Name   string `json:"name"`
	City   string `json:"city"`
	Avatar string `json:"avatar"`
}

type UserInfoByIdReq {
	Id int64 `path:"id"`
}

// GET 方法的 query 参数
type UserListReq {
	Page     int64  `form:"page"`
	PageSize int64  `form:"page_size"`
	Sort     string `form:"sort"`
	Order    string `form:"order" v:"order @in:desc,asc#排序只允许填写desc或asc"`
}
type UserListReply {
	Users []*SimpleUserInfoReply `json:"users"`
}

//============================> user v1 <============================
//no need login
@server(
	prefix: userapi/v1
	group: auth
)
service user-api {
	@doc "手机号是否存在"
	@handler phoneExist
	post /auth/signup/phone/exist (PhoneExistReq) returns (PhoneExistReply)
	@doc "生成图形验证码"
	@handler genCaptcha
	get /auth/verify-codes/captcha returns (CaptchaReply)
	@doc "发送短信验证码"
	@handler sendSmsCode
	post /auth/verify-codes/sms (SendSmsCodeReq) returns (SendSmsCodeReply)
	@doc "使用手机号注册"
	@handler signupByPhone
	post /auth/signup/phone/register (SignupByPhoneReq) returns (TokenReply)
	@doc "使用手机号密码登录"
	@handler loginByPhone
	post /auth/login/phone (LoginByPhoneReq) returns (TokenReply)
}

@server(
	prefix: userapi/v1
	group: user
)
service user-api {
	@doc "根据id获取用户详情"
	@handler getUserInfoById
	get /users/:id (UserInfoByIdReq) returns (UserInfoReply)
}

//need login
@server(
	prefix: userapi/v1
	group: user
	jwt: Auth
)
service user-api {
	@doc "获取当前用户详情"
	@handler getUserInfo
	get /users/me returns (UserInfoReply)
	@doc "分页获取用户列表"
	@handler getUserList
	get /users (UserListReq) returns (UserListReply)
	
}